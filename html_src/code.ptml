<html>
    <head>
<!--include head.txt -->
        <title>
            C++ Code Examples
        </title>
    </head>

    <body>
<!--include logo.txt -->
<!--include menu.txt -->
        <h1>
            C++ Code Examples
        </h1>

        <p>
            The following code examples have been developed to help students
            studying object-oriented programming in C++. They are listed 
            <i>roughly</i> in the order a student will encounter these topics
            in learning C++ -- "roughly" because the exact order will always
            depend upon the student, the teacher, the textbook, and so on.
        </p>

        <ul>
            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/misc/hello.cpp">
                    Hello World!
                </a>
                <br />
                The paradigmatic first program to write in any language you are
                seeking to learn.
            </li>

            <li>
                <a
                    href="https://github.com/gcallah/OOP2/blob/master/code/misc/hello_nm.cpp">
                    Hello [YourName]!
                </a>
                <br />
                How to get input from the user, and then use that in your
                output.
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/misc/funcs.cpp">
                    C++ function calls
                </a>
                <br />
                Explore the various ways
                   (<span class="hilight">pass-by-value</span>
                and
                <span class="hilight">pass-by-reference</span>)
                we can pass values to a C++ function 
                and get a result returned from that function.
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/misc/mean.cpp">
                    Using vectors
                </a>
                <br />
                Entering values into a <span class="code">vector</span>
                then getting the mean of all values in the vector.
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/misc/PythonListExploration.ipynb">
                    Python loop over a vector</a>
                <br />
                For comparison to the similar C++ loop.
            </li>

            <li>
                <a
                    href="https://github.com/gcallah/OOP2/blob/master/code/misc/complex_struct.cpp">
                    Creating a new type using <span class="code">struct</span>
                </a>
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/misc/complex.cpp">
                    Turning the <span class="code">struct</span> into a class.
                </a>
                <br />
                This file is also used to demonstrate
                <span class="hilight">operator over-loading</span>.
            </li>

            <li>
                <a
                    href="https://github.com/gcallah/OOP2/blob/master/code/vector/my_vec.cpp">
                    Implementing a class like <span class="code">vector</span>
                    on our own.
                </a>
                <br />
                Here we do more
                <span class="hilight">operator over-loading</span>, 
                including the <span class="code">[]</span> operator.
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/blob/master/code/mics/base_by_val.cpp">
                    Passing a derived class to a function expecting the base
                    class.
                </a>
                <br />
                Exploring <span class="hilight">polymorphism</span>
                and the
                <span class="hilight">virtual</span> keyword.
            </li>

            <li>
                <a
                    href="https://github.com/gcallah/OOP2/blob/master/code/vector/templ_vec.cpp">
                    Now let's make our own <span class="code">vector</span> a 
                    generic machine for creating vectors.
                </a>
                <br />
            </li>

            <li>
                <a href="https://github.com/gcallah/OOP2/tree/master/code/weather">
                    Code for gathering weather data.
                </a>
                <br />
                (The numbered files are various iterations of the program.)
                <br />
                Within this program, particular classes / files address
                particular C++ features:
                <br />
                <ul class="nested">
                    <li>
                        Copy control: Allocating and freeing memory.
                        <br />
                        <span class="hilight">Code examples:</span>
                        <br />
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/image.cpp">
                            image.cpp</a>
                        allocates a buffer for its image, and uses
                        <span class="hilight">copy control</span>
                        to manage that buffer properly.
                    </li>

                    <li>
                        Multiple compilation units.
                        <br />
                        <span class="hilight">Code examples:</span>
                        <br />
                        The entire project illustrates breaking code into
                        <span class="hilight">separate compilation units</span>.
                    </li>

                    <li>
                        Class heirarchies.
                        <br />
                        <span class="hilight">Code examples:</span>
                        <br />
                        Both
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/image.h">
                            image.h
                        </a>
                        and
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/rawdata.h">
                            rawdata.h
                        </a>
                        create a <span class="hilight">class heirarchy</span>,
                        which uses <span class="hilight">inheritance</span>.
                    </li>

                    <li>
                        <span class="hilight">Polymorphism</span>
                        and <span class="hilight">virtual functions</span>.
                        <br />
                        <span class="hilight">Code examples:</span>
                        <a href="">test_image.cpp</a>
                        is designed to illustrate
                        <a href="https://en.wikipedia.org/wiki/Polymorphism_(computer_science)">
                            polymorphism</a>.
                        We can create a <span class="code">vector</span> of <span
                        class="code">Image</span> pointers, and
                        expect that right sub-class method to be called if we
                        ask to <span class="code">display()</span> one of them, so
                        long as <span class="code">display</span> is
                        declared <span class="code">virtual</span>
                        in the base (Image) class.
                    </li>

                    <li>
                        How <span class="hilight">polymorphism</span>
                        interacts with <span class="hilight">copy
                            control</span>.
                        <br />
                        <span class="hilight">Code examples:</span>
                        <br />
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/rawdata.h">
                            rawdata.h
                        </a>
                        and
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/rawdata.cpp">
                            rawdata.cpp
                        </a>
                        aloong with their test harness
                        <a href="https://github.com/gcallah/OOP2/blob/master/code/weather/test_rawdata.cpp">
                            test_rawdata.cpp
                        </a>,
                        are built to illustrate this theme.
                    </li>
                </ul>

            </li>

        </ul>

    </body>
</html>
